@page "/SaftyChart"
@using AuthPage.Abstractions
@using AuthPage.Models
  <Column>
    <PieChart @ref="pieChart" TItem="double" Clicked="@OnClicked" />

</Column>
@code {
    IChartCreator chartCreator { get; set; } = new SaftyChartCreator();

    PieChart<double> pieChart { get; set; } = new PieChart<double>();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await HandleRedraw();
        }
    }

    async Task HandleRedraw()
    {
        chartCreator = new SaftyChartCreator();

        await pieChart.Clear();

        IEnumerable<AppChartModel> appChartModel = await chartCreator.LoadData();

        await pieChart.AddLabelsDatasetsAndUpdate(appChartModel.Select(x => x.label).ToArray(), chartCreator.GetChartDataset(appChartModel));// = await chartCreator.InitializeChart();
    }


    Task OnClicked(ChartMouseEventArgs e)
    {
        var model = e.Model as BarChartModel;

        
        return Task.CompletedTask;
    }
}
